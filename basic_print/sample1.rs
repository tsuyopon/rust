/*
 * print, println, formatを使った非常に単純なサンプル
 */
fn main() {

    // print! は改行しないので明示的な改行が必要です。
    print!("Hello, Rust!\n");

    // placeholderを使う
    let x = 10;
    println!("I'm {} years old. You are {} years old.", x, 20);

    // 文字列を変数に保存する
    let x2 = format!("I'm {} years old", 20 );
    println!("{}", x2);


    // {n} で n番目（0始まり）の引数で置き換える
    // {name} で name="value" と指定した引数で置き換えられる
    println!("{} | {} | {1} | {three} | {four}",
         "One",
         "Two",
         three="three",
         four=4);

    // 15を様々な値に変換する  (「_」はスペース
    println!("{:5}", 15);            // ___15       5桁で表示する。空いている桁はスペース表記
    println!("{:05}", 15);           // 00015       5桁で表示する。空いている桁はゼロ埋め表記
    println!("{:b}", 15);            // 1111        2進数で表示する。
    println!("{:8b}", 15);           // ____1111    2進数で8桁表示する。空いている桁はスペース表記
    println!("{:08b}", 15);          // 00001111    2進数で8桁表示する。空いている桁はゼロ埋め表記
    println!("{:o}", 15);            // 17          8進数で表示する
    println!("{:8o}", 15);           // ______17    8進数で8桁表示する。空いている桁はスペース表記
    println!("{:08o}", 15);          // 00000017    8進数で8桁表示する。空いている桁はスペース表記
    println!("{:.3}", 15);           // 15.000      小数点以下の有効桁数3桁までを表示
    println!("{:x}", 15);            // f           16進数で表示する。
    println!("{:8x}", 15);           // _______f    16進数で表示する。空いている桁はスペース表記
    println!("{:08x}", 15);          // 0000000f    16進数で表示する。空いている桁はスペース表記
   
}

